name: Android UI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup Android SDK
      run: |
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
        yes | sdkmanager --licenses
        sdkmanager --install "platform-tools" \
                            "platforms;android-30" \
                            "build-tools;30.0.3" \
                            "system-images;android-30;google_apis;x86_64"
    
    - name: Install Appium
      run: |
        npm install -g appium@2.0.0
        npm install -g appium-uiautomator2-driver
        appium driver install uiautomator2
    
    - name: Create AVD and start emulator
      run: |
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
        echo "no" | avdmanager create avd -n test_avd -k "system-images;android-30;google_apis;x86_64" --force
        $ANDROID_HOME/emulator/emulator -avd test_avd -no-audio -no-window -no-boot-anim -no-snapshot -gpu swiftshader_indirect &
        adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
    
    - name: Start Appium Server
      run: |
        appium --allow-insecure chromedriver_autodownload &
        sleep 10
    
    - name: Setup APK
      run: |
        mkdir -p app
        if [ ! -z "${{ secrets.APK_DOWNLOAD_URL }}" ]; then
          curl -L -o app/your-app.apk "${{ secrets.APK_DOWNLOAD_URL }}"
        fi
    
    - name: Run Tests
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        PATH: ${{ env.PATH }}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
      run: |
        pytest tests/ -v 