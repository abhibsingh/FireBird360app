name: Android UI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup KVM
      run: |
        echo "Installing KVM dependencies..."
        sudo apt-get update
        sudo apt-get install -y \
          qemu-kvm \
          libvirt-daemon-system \
          libvirt-clients \
          bridge-utils
        
        echo "Configuring KVM permissions..."
        sudo addgroup --system kvm
        sudo adduser $USER kvm
        sudo chown root:kvm /dev/kvm
        sudo chmod 660 /dev/kvm
    
    - name: Setup Android SDK
      run: |
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        export ANDROID_AVD_HOME=$HOME/.android/avd
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator
        
        mkdir -p $ANDROID_HOME/licenses
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license
        
        yes | sdkmanager --licenses
        sdkmanager --install "platform-tools" \
                            "platforms;android-30" \
                            "build-tools;30.0.3" \
                            "system-images;android-30;google_apis;x86_64" \
                            "emulator"
    
    - name: Install Appium
      run: |
        npm install -g appium@2.0.0
        npm install -g appium-uiautomator2-driver
        appium driver install uiautomator2
    
    - name: Create and Start Android Emulator
      run: |
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        export ANDROID_AVD_HOME=$HOME/.android/avd
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator
        
        mkdir -p $ANDROID_AVD_HOME
        
        echo "Creating AVD..."
        echo "no" | avdmanager --verbose create avd \
          --force \
          --name "test_avd" \
          --package "system-images;android-30;google_apis;x86_64" \
          --tag "google_apis" \
          --abi "x86_64"
        
        echo "Starting emulator..."
        nohup $ANDROID_HOME/emulator/emulator \
          -avd test_avd \
          -no-window \
          -gpu swiftshader \
          -no-snapshot \
          -no-audio \
          -no-boot-anim \
          -camera-back none \
          -camera-front none \
          -memory 2048 \
          -accel auto \
          -cores 2 &
        
        echo "Waiting for emulator to start..."
        adb wait-for-device
        
        echo "Waiting for boot completion..."
        timeout 300 adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 2; done'
        
        echo "Device status:"
        adb devices -l
        
        echo "Emulator started successfully"
    
    - name: Start Appium Server
      run: |
        appium --allow-insecure chromedriver_autodownload &
        sleep 10
    
    - name: Setup APK
      run: |
        mkdir -p app
        if [ ! -z "${{ secrets.APK_DOWNLOAD_URL }}" ]; then
          curl -L -o app/your-app.apk "${{ secrets.APK_DOWNLOAD_URL }}"
        fi
    
    - name: Run Tests
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        ANDROID_AVD_HOME: ${{ github.workspace }}/.android/avd
        PATH: ${{ env.PATH }}:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator
      run: |
        pytest tests/ -v 